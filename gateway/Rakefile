desc "Setup dev databases"
task :db_bootstrap => %w[db_create db_migrate]

task :db_create do
 %w[test development].each do |env|
  `touch #{db_dir}/#{env}.sqlite`
 end
end

desc "Do migrations on all databases"
task :db_migrate do
  migrations_dir = find_path 'data', 'sequel_migrations'
  Dir.glob("#{db_dir}/*.sqlite") do |item|
    `sequel -m #{migrations_dir} sqlite://#{item}`
  end
end

desc "Rollback to version given"
task :db_rollback, :target do |t, args|
  target_version = args[:target].to_i
  migrations_dir = find_path 'data', 'sequel_migrations'
  Dir.glob("#{db_dir}/*.sqlite") do |item|
    puts `sequel -M #{target_version} -m #{migrations_dir} sqlite://#{item}`
  end
end

desc "Seed DEV database"
task :db_seed do
  require_relative 'environment_loader'
  include EnvironmentLoader
  load_env("development")
  url = "sqlite://#{data_path FigNewton.sqlite.file}"
  require 'sequel'
  db = Sequel.connect(url)
  FigNewton.load "seed.yml"

  FigNewton.categories.to_hash.map(&:flatten).each do |category, amount|
    db[:categories].insert :name => category, :budget => amount
  end

  FigNewton.accounts.to_hash.map(&:flatten).each do |account, balance|
    db[:accounts].insert :name => account, :balance => balance
  end

end

def db_dir
  find_path 'data'
end

def find_path(*args)
  File.join(File.expand_path(File.dirname(__FILE__)), *args)
end
